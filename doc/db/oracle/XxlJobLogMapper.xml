<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxl.job.admin.dao.XxlJobLogDao">


    <resultMap id="XxlJobLog" type="com.xxl.job.admin.core.model.XxlJobLog" >
        <result column="id" property="id" />

        <result column="job_group" property="jobGroup" />
        <result column="job_id" property="jobId" />


        <result column="executor_address" property="executorAddress" />
        <result column="executor_handler" property="executorHandler" />
        <result column="executor_param" property="executorParam" />
        <result column="executor_fail_retry_count" property="executorFailRetryCount" />

        <result column="trigger_time" property="triggerTime" />
        <result column="trigger_code" property="triggerCode" />
        <result column="trigger_msg" property="triggerMsg" />

        <result column="handle_time" property="handleTime" />
        <result column="handle_code" property="handleCode" />
        <result column="handle_msg" property="handleMsg" />

        <result column="alarm_status" property="alarmStatus" />

    </resultMap>

    <sql id="Base_Column_List">
        t.id,
        t.job_group,
        t.job_id,
        t.executor_address,
        t.executor_handler,
        t.executor_param,
        t.executor_fail_retry_count,
        t.trigger_time,
        t.trigger_code,
        t.trigger_msg,
        t.handle_time,
        t.handle_code,
        t.handle_msg,
        t.alarm_status
    </sql>

    <sql id='JOB_KEY_SEQUENCE'>JOB_KEY_SEQUENCE.NEXTVAL</sql>

    <select id="pageList" parameterType="java.util.HashMap" resultMap="XxlJobLog">
        SELECT <include refid="Base_Column_List" />
        FROM XXL_JOB_QRTZ_TRIGGER_LOG t
        <trim prefix="WHERE" prefixOverrides="AND | OR" >
            <if test="jobGroup != null and jobGroup != ''">
                AND t.job_group = #{jobGroup}
            </if>
            <if test="jobId gt 0">
                AND t.job_id = #{jobId}
            </if>
            <if test="triggerTimeStart != null">
                AND t.trigger_time <![CDATA[ >= ]]> #{triggerTimeStart}
            </if>
            <if test="triggerTimeEnd != null">
                AND t.trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd}
            </if>
            <if test="logStatus == 1" >
                AND t.handle_code = 200
            </if>
            <if test="logStatus == 2" >
                AND (
                    (t.trigger_code <![CDATA[ > ]]> 0 AND t.trigger_code!=200)
                    (t.handle_code <![CDATA[ > ]]> 0 AND t.handle_code!=200)
                )
            </if>
            <if test="logStatus == 3" >
                AND (t.trigger_code = 200 AND t.handle_code=0)
            </if>
            <!-- 适用于Oracle分页查询:1\因为id是主键所有可以ROWNUM与ORDER BY何用，否则需要先ORDER BY 再取ROWNUM;2\ oracle 从1开始 -->
            AND ROWNUM BETWEEN #{offset}+1 AND #{offset}+#{pagesize}
            ORDER BY id DESC
        </trim>
        <!-- LIMIT #{offset}, #{pagesize} -->
    </select>

    <select id="pageListCount" parameterType="java.util.HashMap" resultType="int">
        SELECT count(1)
        FROM XXL_JOB_QRTZ_TRIGGER_LOG t
        <trim prefix="WHERE" prefixOverrides="AND | OR" >
            <if test="jobGroup != null and jobGroup != ''">
                AND t.job_group = #{jobGroup}
            </if>
            <if test="jobId gt 0">
                AND t.job_id = #{jobId}
            </if>
            <if test="triggerTimeStart != null">
                AND t.trigger_time <![CDATA[ >= ]]> #{triggerTimeStart}
            </if>
            <if test="triggerTimeEnd != null">
                AND t.trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd}
            </if>
            <if test="logStatus == 1" >
                AND t.handle_code = 200
            </if>
            <if test="logStatus == 2" >
                AND (
                (t.trigger_code <![CDATA[ > ]]> 0 AND t.trigger_code!=200)
                (t.handle_code <![CDATA[ > ]]> 0 AND t.handle_code!=200)
                )
            </if>
            <if test="logStatus == 3" >
                AND (t.trigger_code = 200 AND t.handle_code=0)
            </if>
        </trim>
    </select>

    <select id="load" parameterType="java.lang.Integer" resultMap="XxlJobLog">
        SELECT <include refid="Base_Column_List" />
        FROM XXL_JOB_QRTZ_TRIGGER_LOG t
        WHERE t.id = #{id}
    </select>




    <insert id="save" parameterType="com.xxl.job.admin.core.model.XxlJobLog" keyProperty="id" >
        <selectKey keyProperty="id" resultType="int" order="BEFORE">
            select <include refid="JOB_KEY_SEQUENCE" /> from dual
        </selectKey>
        INSERT INTO XXL_JOB_QRTZ_TRIGGER_LOG (
            id,
            job_group,
            job_id,
            trigger_time,
            trigger_code,
            handle_code
        ) VALUES (
            #{id},
            #{jobGroup},
            #{jobId},
            #{triggerTime},
            #{triggerCode},
            #{handleCode}
        )
        <!-- <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>  -->
    </insert>

    <update id="updateTriggerInfo">
        UPDATE XXL_JOB_QRTZ_TRIGGER_LOG
        SET
            trigger_time= #{triggerTime},
            trigger_code= #{triggerCode},
            trigger_msg= #{triggerMsg,jdbcType=VARCHAR},
            executor_address= #{executorAddress,jdbcType=VARCHAR},
            executor_handler=#{executorHandler,jdbcType=VARCHAR},
            executor_param= #{executorParam,jdbcType=VARCHAR},
            executor_fail_retry_count= #{executorFailRetryCount}
        WHERE id= #{id}
    </update>

    <update id="updateHandleInfo">
        UPDATE XXL_JOB_QRTZ_TRIGGER_LOG
        SET
            handle_time= #{handleTime},
            handle_code= #{handleCode},
            handle_msg= #{handleMsg}
        WHERE id= #{id}
    </update>

    <delete id="delete">
        delete from XXL_JOB_QRTZ_TRIGGER_LOG
        WHERE job_id = #{jobId}
    </delete>

    <select id="triggerCountByHandleCode" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT count(1)
        FROM XXL_JOB_QRTZ_TRIGGER_LOG t
        <trim prefix="WHERE" prefixOverrides="AND | OR" >
            <if test="handleCode gt 0">
                AND t.handle_code = #{handleCode}
            </if>
        </trim>
    </select>

    <select id="triggerCountByDay" parameterType="java.util.Map" resultType="java.util.Map" >
        <!-- SELECT DATE_FORMAT(trigger_time,'%Y-%m-%d') triggerDay, COUNT(id) triggerCount -->
        SELECT TO_CHAR(trigger_time,'yyyy-mm-dd') "triggerDay", COUNT(handle_code) "triggerDayCount",
        SUM(CASE WHEN (trigger_code  in (0, 200) and handle_code = 0) then 1 else 0 end) as "triggerDayCountRunning",
        SUM(CASE WHEN handle_code = 200 then 1 else 0 end) as "triggerDayCountSuc"
        FROM XXL_JOB_QRTZ_TRIGGER_LOG
        WHERE trigger_time BETWEEN #{from} and #{to}
        GROUP BY TO_CHAR(trigger_time,'yyyy-mm-dd')
    </select>

    <delete id="clearLog" parameterType="java.util.Map" >
        delete from XXL_JOB_QRTZ_TRIGGER_LOG
        <trim prefix="WHERE" prefixOverrides="AND | OR" >
            <if test="jobGroup gt 0">
                AND job_group = #{jobGroup}
            </if>
            <if test="jobId gt 0">
                AND job_id = #{jobId}
            </if>
            <if test="clearBeforeTime != null">
                AND trigger_time <![CDATA[ <= ]]> #{clearBeforeTime}
            </if>
            <if test="clearBeforeNum gt 0">
                AND id NOT in(
                    SELECT id FROM(
                        SELECT * FROM(
                        SELECT id FROM XXL_JOB_QRTZ_TRIGGER_LOG t
                        <trim prefix="WHERE" prefixOverrides="AND | OR" >
                            <if test="jobGroup gt 0">
                                AND t.job_group = #{jobGroup}
                            </if>
                            <if test="jobId gt 0">
                                AND t.job_id = #{jobId}
                            </if>
                        </trim>
                        ORDER BY t.trigger_time desc
                        ) WHERE ROWNUM BETWEEN 1 AND #{clearBeforeNum}
                        <!-- LIMIT 0, #{clearBeforeNum} -->
                    ) t1
                )
            </if>
        </trim>
    </delete>

    <select id="findFailJobLogIds" resultType="int" >
        SELECT id FROM XXL_JOB_QRTZ_TRIGGER_LOG
        WHERE not (
        (trigger_code in (0, 200) and handle_code = 0)
        OR
        (handle_code = 200)
        )
        AND alarm_status = 0
        ORDER BY id ASC
    </select>

    <update id="updateAlarmStatus" >
        UPDATE XXL_JOB_QRTZ_TRIGGER_LOG
        SET
        alarm_status = #{newAlarmStatus}
        WHERE id= #{logId} AND alarm_status = #{oldAlarmStatus}
    </update>
</mapper>